{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","SortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCwCSC,EAtCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cAEVC,EAAWC,cAGXC,EAA8C,QAFhC,IAAIC,gBAAgBH,EAASI,QAEbC,IAAI,QAClCC,GAjBYV,EAiBcT,EAAMS,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAsBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAZY,WACxBb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAkB,OAAS,SAE9CJ,EAAQc,KAAR,UACKZ,EAASa,SADd,iBAC+BX,EAAkB,OAAS,SAMtD,kBACQA,EAAkB,aAAe,iBAG3C,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,yCC5BRuB,EAXO,WACpB,OACE,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM9B,UAAU,MAAMK,GAAI,aAA1B,6BCuBS0B,UAtBG,WAGhB,MAAoDC,YAAQC,KAAa,GAAlEC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OAAYC,EAA/B,EAA0BC,KAAmBC,EAA7C,EAA6CA,MAK7C,OAHAC,qBAAU,WACRL,MACA,CAACA,IACS,YAATC,EACM,qBAAKnC,UAAU,WAAf,SACL,cAACwC,EAAA,EAAD,MAGDF,EACM,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAE7B,cAAVH,GAA2BC,GAAqC,IAAvBA,EAAaK,OAGlD,cAAC,EAAD,CAAWjC,OAAQ4B,IAFjB,cAAC,EAAD","file":"static/js/5.51e1e93e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3B02X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2bxEr\",\"sorting\":\"QuoteList_sorting__2cSqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__MQYJe\"};","\nimport { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n\n  const location = useLocation();\n  const queryparams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryparams.get(\"sort\") === \"asc\";\n  const SortedQuotes = sortQuotes(props.quotes, isSortAscending);\n  const changesortHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortAscending ? \"desc\" : \"asc\"}`,\n    });\n    history.push(\n      `${location.pathname}?sort=${isSortAscending ? \"desc\" : \"asc\"}`\n    );\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changesortHandler}>\n          sort {isSortAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {SortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to={'/new-quote'}>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\n\nconst AllQuotes = () => {\n    \n  \n  const {sendRequest,status,data:loadedQuotes ,error}=useHttp(getAllQuotes,true)\n\n  useEffect(()=>{\n    sendRequest();\n  },[sendRequest])\n  if(status==='pending'){\n    return <div className='centered' >\n      <LoadingSpinner/>\n    </div>\n  }\n  if(error){\n    return <p className='centered focused'>{error}</p>\n  }\n  if(status=== 'completed' && (!loadedQuotes||loadedQuotes.length ===0)){\n    return <NoQuotesFound/>\n  }\n  return <QuoteList quotes={loadedQuotes} />\n};\n\nexport default AllQuotes;"],"sourceRoot":""}